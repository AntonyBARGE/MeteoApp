// Mocks generated by Mockito 5.4.0 from annotations
// in meteo_app_barge_antony/test/presentation/views/display_widgets/location_widgets/city_headline_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:dartz/dartz.dart' as _i2;
import 'package:meteo_app_barge_antony/data/models/city_model.dart' as _i9;
import 'package:meteo_app_barge_antony/domain/entities/city_entity.dart' as _i7;
import 'package:meteo_app_barge_antony/domain/entities/weather_entity.dart'
    as _i6;
import 'package:meteo_app_barge_antony/domain/repositories/location_repository.dart'
    as _i8;
import 'package:meteo_app_barge_antony/domain/repositories/weather_repository.dart'
    as _i3;
import 'package:meteo_app_barge_antony/foundation/error/failures.dart' as _i5;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [WeatherRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockWeatherRepository extends _i1.Mock implements _i3.WeatherRepository {
  MockWeatherRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.WeatherEntity>> getWeather(
    _i7.CityEntity? city,
    DateTime? day,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getWeather,
          [
            city,
            day,
          ],
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.Failure, _i6.WeatherEntity>>.value(
                _FakeEither_0<_i5.Failure, _i6.WeatherEntity>(
          this,
          Invocation.method(
            #getWeather,
            [
              city,
              day,
            ],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i6.WeatherEntity>>);
}

/// A class which mocks [LocationRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockLocationRepository extends _i1.Mock
    implements _i8.LocationRepository {
  MockLocationRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i9.CityModel>> getCurrentCity() =>
      (super.noSuchMethod(
        Invocation.method(
          #getCurrentCity,
          [],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, _i9.CityModel>>.value(
            _FakeEither_0<_i5.Failure, _i9.CityModel>(
          this,
          Invocation.method(
            #getCurrentCity,
            [],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i9.CityModel>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i9.CityModel>>>
      getLocationsFromCityName(String? cityName) => (super.noSuchMethod(
            Invocation.method(
              #getLocationsFromCityName,
              [cityName],
            ),
            returnValue:
                _i4.Future<_i2.Either<_i5.Failure, List<_i9.CityModel>>>.value(
                    _FakeEither_0<_i5.Failure, List<_i9.CityModel>>(
              this,
              Invocation.method(
                #getLocationsFromCityName,
                [cityName],
              ),
            )),
          ) as _i4.Future<_i2.Either<_i5.Failure, List<_i9.CityModel>>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, _i9.CityModel>> getCityFromLatLong(
    double? latitude,
    double? longitude,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCityFromLatLong,
          [
            latitude,
            longitude,
          ],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, _i9.CityModel>>.value(
            _FakeEither_0<_i5.Failure, _i9.CityModel>(
          this,
          Invocation.method(
            #getCityFromLatLong,
            [
              latitude,
              longitude,
            ],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i9.CityModel>>);
}
